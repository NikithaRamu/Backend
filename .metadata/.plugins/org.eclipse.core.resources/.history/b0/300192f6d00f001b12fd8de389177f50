package com.nikitha.fsd.gipher.config;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.common.serialization.StringSerializer;
import org.springframework.beans.factory.annotation.Value;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.kafka.core.DefaultKafkaProducerFactory;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.core.ProducerFactory;
import org.springframework.kafka.support.serializer.JsonSerializer;

import com.nikitha.fsd.gipher.model.Gif;


@Configuration
public class SenderConfig {
	
	@Value(value="${spring.kafka.bootstrap-address}")
	private String bootstrapAddress;
	
	public ProducerFactory<String, Object> producerFac(){
		Map<String,Object> configProp= new HashMap<>();
	    props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);
	    props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
	    props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, JsonSerializer.class);

	    return props;
	}
	
	  @Bean
	  public ProducerFactory<String, Gif> producerFactory() {
	    return new DefaultKafkaProducerFactory<>(org.apache.kafka.clients.producer.ProducerConfig());
	  }

	  @Bean
	  public KafkaTemplate<String, Car> kafkaTemplate() {
	    return new KafkaTemplate<>(producerFactory());
	  }



			

}
